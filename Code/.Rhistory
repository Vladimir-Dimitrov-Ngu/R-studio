caption = "Data Source: Airline Passenger Satisfaction Predective Analysis",
x = "Age",
y = "Counts",
fill =  NULL
)
airline_satisfaction %>%
select(age, gender) %>%
arrange(desc(age)) %>%
mutate(age_group = case_when(
age >= min(age) & age <= 10 ~ glue(min(age), " - 10"),
age > 10 & age <= 18 ~ "11-18",
age > 18 & age <= 25 ~ "18-25",
age > 25 & age <= 35 ~ "26-35",
age > 35 & age <= 45 ~ "36-45",
age > 45 & age <= 50 ~ "46-50",
age > 50 & age <= 64 ~ "51-64",
age > 64 ~ "> 64"),
age_group = factor(
age_group,
level = c(glue(min(age), " - 10"),"11-18","18-25", "26-35", "36-45", "46-50", "51-64", "> 64"))) %>%
count(age_group, gender, name = "counts") %>%
mutate(
perct = round(counts/sum(counts), 2)
) %>%
ggplot(aes(x = age_group, y = counts))+
geom_col(aes(fill = gender), size = 1)+
scale_fill_manual(values = c("Female"  = "#E60088", "Male" = "#0074BB"))+
labs(
title = "Satisfaction by Age and Gender",
caption = "Data Source: Airline Passenger Satisfaction Predective Analysis",
x = "Age",
y = "Counts",
fill =  NULL
)
airline_satisfaction %>%
select(age, gender) %>%
arrange(desc(age)) %>%
mutate(age_group = case_when(
age >= min(age) & age <= 10 ~ glue(min(age), " - 10"),
age > 10 & age <= 18 ~ "11-18",
age > 18 & age <= 25 ~ "18-25",
age > 25 & age <= 35 ~ "26-35",
age > 35 & age <= 45 ~ "36-45",
age > 45 & age <= 50 ~ "46-50",
age > 50 & age <= 64 ~ "51-64",
age > 64 ~ "> 64"),
age_group = factor(
age_group,
level = c(glue(min(age), " - 10"),"11-18","18-25", "26-35", "36-45", "46-50", "51-64", "> 64"))) %>%
count(age_group, gender, name = "counts") %>%
mutate(
perct = round(counts/sum(counts), 2)
) %>%
ggplot(aes(x = age_group, y = counts))+
geom_col(aes(fill = gender), size = 1)+
scale_fill_manual(values = c("Female"  = "#E60088", "Male" = "#0074BB"))+
labs(
title = "Satisfaction by Age and Gender",
caption = "Data Source: Airline Passenger Satisfaction Predective Analysis",
x = "Age",
y = "Counts",
fill =  NULL
)
airline_satisfaction %>%
select(age, gender) %>%
arrange(desc(age)) %>%
mutate(age_group = case_when(
age >= min(age) & age <= 10 ~ glue(min(age), " - 10"),
age > 10 & age <= 18 ~ "11-18",
age > 18 & age <= 25 ~ "18-25",
age > 25 & age <= 35 ~ "26-35",
age > 35 & age <= 45 ~ "36-45",
age > 45 & age <= 50 ~ "46-50",
age > 50 & age <= 64 ~ "51-64",
age > 64 ~ "> 64"),
age_group = factor(
age_group,
level = c(glue(min(age), " - 10"),"11-18","18-25", "26-35", "36-45", "46-50", "51-64", "> 64")))
airline_satisfaction %>%
select(age, gender) %>%
arrange(desc(age)) %>%
mutate(age_group = case_when(
age >= min(age) & age <= 10 ~ glue(min(age), " - 10"),
age > 10 & age <= 18 ~ "11-18",
age > 18 & age <= 25 ~ "18-25",
age > 25 & age <= 35 ~ "26-35",
age > 35 & age <= 45 ~ "36-45",
age > 45 & age <= 50 ~ "46-50",
age > 50 & age <= 64 ~ "51-64",
age > 64 ~ "> 64"),
age_group = factor(
age_group,
level = c(glue(min(age), " - 10"),"11-18","18-25", "26-35", "36-45", "46-50", "51-64", "> 64"))) %>%
count(age_group, gender, name = "counts")
airline_satisfaction %>%
select(age, gender) %>%
arrange(desc(age)) %>%
mutate(age_group = case_when(
age >= min(age) & age <= 10 ~ glue(min(age), " - 10"),
age > 10 & age <= 18 ~ "11-18",
age > 18 & age <= 25 ~ "18-25",
age > 25 & age <= 35 ~ "26-35",
age > 35 & age <= 45 ~ "36-45",
age > 45 & age <= 50 ~ "46-50",
age > 50 & age <= 64 ~ "51-64",
age > 64 ~ "> 64"),
age_group = factor(
age_group,
level = c(glue(min(age), " - 10"),"11-18","18-25", "26-35", "36-45", "46-50", "51-64", "> 64"))) %>%
count(age_group, gender, name = "counts") %>%
mutate(
perct = round(counts/sum(counts), 2)
) %>%
ggplot(aes(x = age_group, y = counts))+
geom_col(aes(fill = gender), size = 1)+
scale_fill_manual(values = c("Female"  = "#E60088", "Male" = "#0074BB"))+
labs(
title = "Satisfaction by Age and Gender",
caption = "Data Source: Airline Passenger Satisfaction Predective Analysis",
x = "Age",
y = "Counts",
fill =  NULL
)
airline_satisfaction %>%
select(age, gender, satisfaction) %>%
arrange(desc(age)) %>%
mutate(age_group = case_when(
age >= min(age) & age <= 10 ~ glue(min(age), " - 10"),
age > 10 & age <= 18 ~ "11-18",
age > 18 & age <= 25 ~ "18-25",
age > 25 & age <= 35 ~ "26-35",
age > 35 & age <= 45 ~ "36-45",
age > 45 & age <= 50 ~ "46-50",
age > 50 & age <= 64 ~ "51-64",
age > 64 ~ "> 64"),
age_group = factor(
age_group,
level = c(glue(min(age), " - 10"),"11-18","18-25", "26-35", "36-45", "46-50", "51-64", "> 64"))) %>%
count(age_group, gender,satisfaction, name = "counts")
airline_satisfaction %>%
select(age, gender, satisfaction) %>%
arrange(desc(age)) %>%
mutate(age_group = case_when(
age >= min(age) & age <= 10 ~ glue(min(age), " - 10"),
age > 10 & age <= 18 ~ "11-18",
age > 18 & age <= 25 ~ "18-25",
age > 25 & age <= 35 ~ "26-35",
age > 35 & age <= 45 ~ "36-45",
age > 45 & age <= 50 ~ "46-50",
age > 50 & age <= 64 ~ "51-64",
age > 64 ~ "> 64"),
age_group = factor(
age_group,
level = c(glue(min(age), " - 10"),"11-18","18-25", "26-35", "36-45", "46-50", "51-64", "> 64"))) %>%
count(age_group, gender,satisfaction, name = "counts") %>%
mutate(
perct = round(counts/sum(counts), 2)
) %>%
ggplot(aes(x = age_group, y = counts))+
geom_col(aes(fill = gender), size = 1)+
scale_fill_manual(values = c("Female"  = "#E60088", "Male" = "#0074BB"))+
labs(
title = "Satisfaction by Age and Gender",
caption = "Data Source: Airline Passenger Satisfaction Predective Analysis",
x = "Age",
y = "Counts",
fill =  NULL
)+facet_wrap(~satisfaction)
gruop_treemap_plot <- function(var_1, var_2 = satisfaction, var_col = "Set1"){
for_title_1 <- as_label(enquo(var_1))
for_title_1 <- str_to_title(str_replace_all(for_title_1, "_", " "))
for_title_2 <- as_label(enquo(var_2))
for_title_2 <- str_to_title(str_replace_all(for_title_2, "_", " "))
airline_satisfaction %>%
select({{var_1}}, {{var_2}}) %>%
mutate(var_1_ex = {{var_1}},
var_2_ex = {{var_2}}) %>%
count(var_1_ex, var_2_ex) %>%
arrange(desc(n)) %>%
treemap(title = glue(for_title_2, " proportion by ", for_title_1),
index = c("var_1_ex", "var_2_ex"),
vSize = "n",
type = "index",
palette = var_col,
fontsize.labels = c(15, 12),
fontcolor.labels = c("black","white"),
fontface.labels = c(2, 2),
align.labels = list(c("center", "center"),
c("left", "bottom")),
overlap.labels = 0.5,
border.col=c("white","gray"),
border.lwds=c(6,1),
inflate.labels = F
)
}
gruop_treemap_plot(class)
help("str_to_title")
dog <- "The quick brown dog"
str_to_upper(dog)
str_to_lower(dog)
str_to_title(dog)
str_to_sentence(dog)
group_treemap_plot <- function(var_1, var_2 = satisfaction, var_col = "Set1"){
for_title <- as.label(enquo(var_1))
for_title_1 <- str_to_title(str_replace_all(for_title_1, "_", " "))
fot_title_2 <- as.label(enquo(var_2))
for_title_2 <- str_to_title(str_replace_all(for_title_2, "_", " "))
airline_satisfaction %>%
select({var_1}, {var_2}) %>%
mutate(var_1_ex = {var_1},
var_2_ex ={var_2}) %>%
count(var_1_ex, var_2_ex) %>%
arrange(desc(n)) %>%
treemap(
title = glue(for_title_2, "proportion by", for_title_1),
index = c("var_1_ex", "var_2_ex"),
vSize = "n",
type = "index",
pallete = var_col,
fontsize.labels = c(15,12),
fontcolor.labels = c("black", "white"),
fontface.labels = c(2,2),
align.labels = list(c("center", "center"),
c("left", "bottom")),
overlap.labels = .5,
border.col = c("white", "gray"),
border.lwds = c(6,1)
inflate.labels = FALSE
airline_satisfaction %>%
select({var_1}, {var_2}) %>%
mutate(var_1_ex = {var_1},
var_2_ex ={var_2}) %>%
count(var_1_ex, var_2_ex) %>%
arrange(desc(n)) %>%
treemap(
title = glue(for_title_2, "proportion by", for_title_1),
index = c("var_1_ex", "var_2_ex"),
vSize = "n",
type = "index",
pallete = var_col,
fontsize.labels = c(15,12),
fontcolor.labels = c("black", "white"),
fontface.labels = c(2,2),
align.labels = list(c("center", "center"),
c("left", "bottom")),
overlap.labels = .5,
border.col = c("white", "gray"),
border.lwds = c(6,1)
inflate.labels = F
group_treemap_plot <- function(var_1, var_2 = satisfaction, var_col = "Set1"){
for_title <- as.label(enquo(var_1))
for_title_1 <- str_to_title(str_replace_all(for_title_1, "_", " "))
fot_title_2 <- as.label(enquo(var_2))
for_title_2 <- str_to_title(str_replace_all(for_title_2, "_", " "))
airline_satisfaction %>%
select({var_1}, {var_2}) %>%
mutate(var_1_ex = {var_1},
var_2_ex ={var_2}) %>%
count(var_1_ex, var_2_ex) %>%
arrange(desc(n)) %>%
treemap(
title = glue(for_title_2, "proportion by", for_title_1),
index = c("var_1_ex", "var_2_ex"),
vSize = "n",
type = "index",
pallete = var_col,
fontsize.labels = c(15,12),
fontcolor.labels = c("black", "white"),
fontface.labels = c(2,2),
align.labels = list(c("center", "center"),
c("left", "bottom")),
overlap.labels = .5,
border.col = c("white", "gray"),
border.lwds = c(6,1)
inflate.labels = F
airline_satisfaction %>%
select({var_1}, {var_2}) %>%
mutate(var_1_ex = {var_1},
var_2_ex ={var_2}) %>%
count(var_1_ex, var_2_ex) %>%
arrange(desc(n)) %>%
treemap(
title = glue(for_title_2, "proportion by", for_title_1),
index = c("var_1_ex", "var_2_ex"),
vSize = "n",
type = "index",
pallete = var_col,
fontsize.labels = c(15,12),
fontcolor.labels = c("black", "white"),
fontface.labels = c(2,2),
align.labels = list(c("center", "center"),
c("left", "bottom")),
overlap.labels = .5,
border.col = c("white", "gray"),
border.lwds = c(6,1),
inflate.labels = F
)
group_treemap_plot <- function(var_1, var_2 = satisfaction, var_col = "Set1"){
for_title <- as.label(enquo(var_1))
for_title_1 <- str_to_title(str_replace_all(for_title_1, "_", " "))
fot_title_2 <- as.label(enquo(var_2))
for_title_2 <- str_to_title(str_replace_all(for_title_2, "_", " "))
airline_satisfaction %>%
select({var_1}, {var_2}) %>%
mutate(var_1_ex = {var_1},
var_2_ex ={var_2}) %>%
count(var_1_ex, var_2_ex) %>%
arrange(desc(n)) %>%
treemap(
title = glue(for_title_2, "proportion by", for_title_1),
index = c("var_1_ex", "var_2_ex"),
vSize = "n",
type = "index",
pallete = var_col,
fontsize.labels = c(15,12),
fontcolor.labels = c("black", "white"),
fontface.labels = c(2,2),
align.labels = list(c("center", "center"),
c("left", "bottom")),
overlap.labels = .5,
border.col = c("white", "gray"),
border.lwds = c(6,1),
inflate.labels = F
)
}
gruop_treemap_plot(class)
knitr::opts_chunk$set(echo = TRUE)
AAPL
knitr::opts_chunk$set(echo = TRUE)
AAPL
df <- AAPL
mat <- as.matrix(AAPL)
date <- row.names(AAPL)
row.names(AAPL) <- NULL
df <- as.data.frame(mat, date)
df <- data.frame(mat, date)
df <- AAPL
mat <- as.matrix(AAPL)
date <- row.names(AAPL)
row.names(AAPL) <- NULL
df <- data.frame(mat, date)
date
df <- AAPL
mat <- as.matrix(AAPL)
date <- row.names(mat)
row.names(AAPL) <- NULL
df <- data.frame(mat, date)
mat <- as.matrix(AAPL)
date <- row.names(mat)
date
date <- row_names(mat)
date <- row.names(mat)
date
AAPL
library(fTrading)
library(quantmod)
start_date
end_date
getSymbols("AAPL",from = start_date, to = end_date )
df <- AAPL
mat <- as.matrix(AAPL)
date <- row.names(mat)
date
AAPL
row.names(AAPL) <- NULL
df <- data.frame(mat, date)
df <- data.frame(mat, date)
df
Adj <-df %>%
select(AAPL.Adjusted, date)
Adj
start_date <-"2020-11-22"
end_date <-"2021-11-22"
getSymbols("AAPL",from = start_date, to = end_date )
df <- AAPL
mat <- as.matrix(AAPL)
date <- row.names(mat)
row.names(AAPL) <- NULL
df <- data.frame(mat, date)
df
row.names(AAPL) <- NULL
start_date <-"2020-11-22"
end_date <-"2021-11-22"
getSymbols("AAPL",from = start_date, to = end_date )
df <- AAPL
mat <- as.matrix(AAPL)
date <- row.names(mat)
row.names(mat) <- NULL
df <- data.frame(mat, date)
df
Adj <-df %>%
select(AAPL.Adjusted, date)
Adj
ema <- emaTA(Adj$AAPL.Adjusted)
ema
ema <- emaTA(Adj$AAPL.Adjusted, lambda = .5)
ema
plot(y = Adj$AAPL.Adjusted, x = 1:length(Adj$AAPL.Adjusted))
plot(y = Adj$AAPL.Adjusted, x = 1:length(Adj$AAPL.Adjusted, type = "l"))
plot(y = Adj$AAPL.Adjusted, x = 1:length(Adj$AAPL.Adjusted), type = "l"))
plot(y = Adj$AAPL.Adjusted, x = 1:length(Adj$AAPL.Adjusted), type = "l")
lines(y=ema,x=1:length(Adj$AAPL.Adjusted), col=1)
lines(y=ema,x=1:length(Adj$AAPL.Adjusted), col=1)
ggplot(aes(x = 1:length(Adj$AAPL.Adjusted), y = Adj$AAPL.Adjusted))+
geom_line()
ggplot(aes(x = 1:length(Adj$AAPL.Adjusted), y = Adj$AAPL.Adjusted))+
geom_line()
ggplot(data = Adj,aes(x = 1:length(Adj$AAPL.Adjusted), y = Adj$AAPL.Adjusted))+
geom_line()
ggplot(data = Adj,aes(x = 1:length(Adj$AAPL.Adjusted), y = Adj$AAPL.Adjusted))+
geom_line()+
geom_line(aes(y = ema, x = 1:length(Adj$AAPL.Adjusted)))
ggplot(data = Adj,aes(x = 1:length(Adj$AAPL.Adjusted), y = Adj$AAPL.Adjusted))+
geom_line()+
geom_line(aes(y = ema, x = 1:length(Adj$AAPL.Adjusted), col = "blue"))
ggplot(data = Adj,aes(x = 1:length(Adj$AAPL.Adjusted), y = Adj$AAPL.Adjusted))+
geom_line()+
geom_line(aes(y = ema, x = 1:length(Adj$AAPL.Adjusted), col = "blue"), show.legend = F)
ggplot(data = Adj,aes(x = 1:length(Adj$AAPL.Adjusted), y = Adj$AAPL.Adjusted))+
geom_line()+
geom_line(aes(y = ema, x = 1:length(Adj$AAPL.Adjusted), col = "blue"), show.legend = F)+
lab(x = "Date", y ="Price", title = "Наложенное экс сглаживание, лямбда = .5")
ggplot(data = Adj,aes(x = 1:length(Adj$AAPL.Adjusted), y = Adj$AAPL.Adjusted))+
geom_line()+
geom_line(aes(y = ema, x = 1:length(Adj$AAPL.Adjusted), col = "blue"), show.legend = F)+
labs(x = "Date", y ="Price", title = "Наложенное экс сглаживание, лямбда = .5")
ggplot(data = Adj,aes(x = 1:length(Adj$AAPL.Adjusted), y = Adj$AAPL.Adjusted))+
geom_line()+
geom_line(aes(y = ema, x = 1:length(Adj$AAPL.Adjusted), col = "blue"), show.legend = F)+
labs(x = "Date", y ="Price", title = "Наложенное экс сглаживание, лямбда = 0.5")
Sma_2 <-SMA(Adj$AAPL.Adjusted, n =5)
Sma_1 <-SMA(Adj$AAPL.Adjusted, n =3)
Sma_2 <-SMA(Adj$AAPL.Adjusted, n =5)
Sma_1 <-c(NA,NA,NA,NA,NA,NA,Sma_1,NA,NA,NA,NA,NA)
Sma_2 <-c(NA,NA,NA,NA,NA,NA,NA,Sma_2,NA,NA,NA,NA,NA,NA)
+xlab("date")+ylab('Price')+
theme_bw()
ggplotly(ggplot(c, aes(x=as.Date(Adj$date),y=Adj$AAPL.Adjusted))+geom_line(color="#CD69CB")+
xlab("date")+ylab('Price')+theme_bw()
juice
knitr::opts_chunk$set(echo = TRUE)
juice <- read_csv2("juice_base.csv")
library(readr)
library(readr)
juice <- read_csv2("juice_base.csv")
juice
```{r}
df <- juice
df
df <- df %>%
filte(id_store == 7)
library(dplyr)
library(dplyr)
df <- df %>%
filte(id_store == 7)
df <- df %>%
filte(id_store == 7)
df <- df %>%
filter(id_store == 7)
df
write_excel_csv(df, path = "C:\Users\user\Anaconda\juice\Данные\store7.xlsx")
library(xlsx)
install.packages("xlsx")
df <- juice
df_7 <- df %>%
filter(id_store == 7)
library(xlsx)
write.xlsx(df_7, path = "C:\Users\user\Anaconda\juice\Данные\store7.xlsx")
write.xlsx(df_7, path ="C:\Users\user\Anaconda\juice\Данные\store7.xlsx")
write.xlsx(df_7, file ="C:\Users\user\Anaconda\juice\Данные\store7.xlsx")
write.xlsx(df_7, file ="df7out.xlsx")
write.xlsx(df_7, file ="df7out.xlsx")
write.xlsx(df_7,"df7out.xlsx")
df
df_7
write.xlsx(df_7, "df_7")
write.xlsx(df_7, "df_7.xlsx")
write.xlsx(df_7, "df_7.xlsx")
setwd("C:/Users/user/R in git/Code")
# Installation ----
install.packages("modelStudio")
install.packages("DALEX")
library(modelStudio)
library(DALEX)
library(tidymodels)
library(tidyverse)
fit_xgboost <- boost_tree(learn_rate = 0.3) %>%
set_mode("regression") %>%
set_engine("xgboost") %>%
fit(hwy ~., data = data_tbl)
data_tbl <- mpg %>%
select(hwy, manufacturer: drv, fl, class)
fit_xgboost <- boost_tree(learn_rate = 0.3) %>%
set_mode("regression") %>%
set_engine("xgboost") %>%
fit(hwy ~., data = data_tbl)
data_tbl
str(data_tbl)
head(data_tbl, 5)
head(data_tbl, 15)
sample(data_tbl, 5)
fit_xgboost
explainer <- DALEX::explain(
model = fit_xgboost,
data = data_tbl,
y = data_tbl$hwy,
label = "XGBoost"
)
modelStudio::modelStudio(explainer)
2+2
modelStudio::modelStudio(explainer)
modelStudio::modelStudio(explainer)
